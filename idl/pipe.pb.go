// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipe.proto

package idl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PipeOption int32

const (
	PipeOption_ACK        PipeOption = 1
	PipeOption_CONNECT    PipeOption = 2
	PipeOption_DISCONNECT PipeOption = 3
	PipeOption_DATA       PipeOption = 4
	PipeOption_PIPE       PipeOption = 5
)

var PipeOption_name = map[int32]string{
	1: "ACK",
	2: "CONNECT",
	3: "DISCONNECT",
	4: "DATA",
	5: "PIPE",
}
var PipeOption_value = map[string]int32{
	"ACK":        1,
	"CONNECT":    2,
	"DISCONNECT": 3,
	"DATA":       4,
	"PIPE":       5,
}

func (x PipeOption) Enum() *PipeOption {
	p := new(PipeOption)
	*p = x
	return p
}
func (x PipeOption) String() string {
	return proto.EnumName(PipeOption_name, int32(x))
}
func (x *PipeOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PipeOption_value, data, "PipeOption")
	if err != nil {
		return err
	}
	*x = PipeOption(value)
	return nil
}
func (PipeOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_pipe_cf19d2b18a28246d, []int{0}
}

type RemoteInfo struct {
	Port                 *int32   `protobuf:"varint,1,req,name=port" json:"port,omitempty"`
	Ip                   *string  `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteInfo) Reset()         { *m = RemoteInfo{} }
func (m *RemoteInfo) String() string { return proto.CompactTextString(m) }
func (*RemoteInfo) ProtoMessage()    {}
func (*RemoteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipe_cf19d2b18a28246d, []int{0}
}
func (m *RemoteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteInfo.Unmarshal(m, b)
}
func (m *RemoteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteInfo.Marshal(b, m, deterministic)
}
func (dst *RemoteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteInfo.Merge(dst, src)
}
func (m *RemoteInfo) XXX_Size() int {
	return xxx_messageInfo_RemoteInfo.Size(m)
}
func (m *RemoteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteInfo proto.InternalMessageInfo

func (m *RemoteInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *RemoteInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

type PipeAction struct {
	Option               *PipeOption `protobuf:"varint,1,req,name=option,enum=idl.PipeOption" json:"option,omitempty"`
	Id                   *uint32     `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	RemoteInfo           *RemoteInfo `protobuf:"bytes,3,opt,name=remoteInfo" json:"remoteInfo,omitempty"`
	OK                   *bool       `protobuf:"varint,4,opt,name=OK" json:"OK,omitempty"`
	Data                 []byte      `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PipeAction) Reset()         { *m = PipeAction{} }
func (m *PipeAction) String() string { return proto.CompactTextString(m) }
func (*PipeAction) ProtoMessage()    {}
func (*PipeAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipe_cf19d2b18a28246d, []int{1}
}
func (m *PipeAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeAction.Unmarshal(m, b)
}
func (m *PipeAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeAction.Marshal(b, m, deterministic)
}
func (dst *PipeAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeAction.Merge(dst, src)
}
func (m *PipeAction) XXX_Size() int {
	return xxx_messageInfo_PipeAction.Size(m)
}
func (m *PipeAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeAction.DiscardUnknown(m)
}

var xxx_messageInfo_PipeAction proto.InternalMessageInfo

func (m *PipeAction) GetOption() PipeOption {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return PipeOption_ACK
}

func (m *PipeAction) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PipeAction) GetRemoteInfo() *RemoteInfo {
	if m != nil {
		return m.RemoteInfo
	}
	return nil
}

func (m *PipeAction) GetOK() bool {
	if m != nil && m.OK != nil {
		return *m.OK
	}
	return false
}

func (m *PipeAction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RemoteInfo)(nil), "idl.RemoteInfo")
	proto.RegisterType((*PipeAction)(nil), "idl.PipeAction")
	proto.RegisterEnum("idl.PipeOption", PipeOption_name, PipeOption_value)
}

func init() { proto.RegisterFile("pipe.proto", fileDescriptor_pipe_cf19d2b18a28246d) }

var fileDescriptor_pipe_cf19d2b18a28246d = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0x76, 0xd7, 0xd6, 0xbf, 0xb5, 0x86, 0x39, 0xe5, 0x66, 0xa8, 0x20, 0xc1, 0xc3,
	0x1e, 0x7c, 0x83, 0xb0, 0xad, 0xb0, 0x14, 0xba, 0x8b, 0xf6, 0x05, 0x8a, 0x89, 0x10, 0xa8, 0x4d,
	0x58, 0x72, 0xf0, 0xf1, 0x25, 0xb1, 0x4a, 0x6f, 0xff, 0x0c, 0xff, 0x37, 0xdf, 0x00, 0xd1, 0x47,
	0xd7, 0xc6, 0x29, 0xa4, 0x40, 0x95, 0xb7, 0xa7, 0xf5, 0x13, 0xf0, 0xe6, 0xbe, 0x42, 0x72, 0xfd,
	0xf9, 0x33, 0xd0, 0x12, 0x75, 0x0c, 0x53, 0x92, 0x4c, 0x71, 0xdd, 0x10, 0xc0, 0x7d, 0x94, 0x5c,
	0x31, 0x7d, 0xbb, 0xfe, 0x06, 0x46, 0x1f, 0x9d, 0xf9, 0x48, 0x3e, 0x9c, 0xe9, 0x01, 0x37, 0x21,
	0xe6, 0x54, 0x9a, 0xab, 0x97, 0xfb, 0xd6, 0xdb, 0x53, 0x9b, 0x0b, 0x43, 0x59, 0x17, 0xd4, 0x16,
	0xf4, 0x8e, 0x1e, 0x81, 0xe9, 0x5f, 0x21, 0x2b, 0xc5, 0xf4, 0xe2, 0x02, 0x5c, 0x99, 0x01, 0x3e,
	0xec, 0x64, 0xad, 0x98, 0x9e, 0xe7, 0x2f, 0xec, 0x31, 0x1d, 0x65, 0xa3, 0x98, 0x5e, 0x3e, 0xbf,
	0xfe, 0x9a, 0x2f, 0x87, 0x67, 0xa8, 0x4c, 0xb7, 0x13, 0x8c, 0x16, 0x98, 0x75, 0xc3, 0x7e, 0xbf,
	0xed, 0x0e, 0x82, 0xd3, 0x0a, 0xd8, 0xf4, 0xef, 0x7f, 0x73, 0x45, 0x73, 0xd4, 0x1b, 0x73, 0x30,
	0xa2, 0xce, 0x69, 0xec, 0xc7, 0xad, 0x68, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x04, 0x9f, 0x30,
	0xce, 0xfb, 0x00, 0x00, 0x00,
}
